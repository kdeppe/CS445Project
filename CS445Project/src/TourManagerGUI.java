import java.io.*;
import java.util.*;
import java.util.prefs.Preferences;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kristen
 */
public class TourManagerGUI extends javax.swing.JFrame {

    /**
     * Creates new form TourManagerGUI
     */
    public TourManagerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        BookTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        BookingTourList = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        TourNumber = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        BookingEmail = new javax.swing.JTextField();
        BookingButton = new javax.swing.JButton();
        ListAvailable = new javax.swing.JButton();
        ListFuture = new javax.swing.JButton();
        ListAll = new javax.swing.JButton();
        CancelBookingButton = new javax.swing.JButton();
        CancelTourButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        BookOutputPane = new javax.swing.JTextArea();
        AddClient = new javax.swing.JButton();
        ChangeBookingButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        OldTourNumber = new javax.swing.JTextField();
        SaveAndExitButton1 = new javax.swing.JButton();
        ChangePrice = new javax.swing.JButton();
        ScheduleTab = new javax.swing.JPanel();
        ScheduleDescription = new javax.swing.JTextField();
        ScheduleMinCapacity = new javax.swing.JTextField();
        SchedulePrice = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        StartHourMenu = new javax.swing.JComboBox();
        EndMinuteMenu = new javax.swing.JComboBox();
        EndHourMenu = new javax.swing.JComboBox();
        StartMinuteMenu = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        ScheduleName = new javax.swing.JTextField();
        CreateTourButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        RepeatCheck = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        ScheduleLocation = new javax.swing.JTextField();
        ScheduleStart = new com.toedter.calendar.JCalendar();
        ScheduleEnd = new com.toedter.calendar.JCalendar();
        RepeatUntil = new com.toedter.calendar.JCalendar();
        ScheduleClear = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ScheduleOutput = new javax.swing.JTextArea();
        AMPMEnd = new javax.swing.JComboBox();
        AMPMStart = new javax.swing.JComboBox();
        SaveAndExitButton2 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        ScheduleMaxCapacity = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        ReportTab = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReportOutput = new javax.swing.JTextArea();
        ReportButton = new javax.swing.JButton();
        ReportEnd = new com.toedter.calendar.JCalendar();
        ReportStart = new com.toedter.calendar.JCalendar();
        SaveAndExitButton3 = new javax.swing.JButton();
        ClientLookupTab = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        EmailLookupField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ClientSearchOutput = new javax.swing.JTextArea();
        SaveAndExitButton4 = new javax.swing.JButton();
        ListClientsButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        DefaultCancelTime = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        DefaultMax = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        DefaultMin = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        PreferencesOut = new javax.swing.JTextArea();
        SaveAndExitButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        TourLookupField = new javax.swing.JTextField();
        ListClientsButton1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        TourSearchOutput = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        SaveAndExitButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        BookingTourList.setEditable(false);
        BookingTourList.setColumns(20);
        BookingTourList.setLineWrap(true);
        BookingTourList.setRows(5);
        BookingTourList.setWrapStyleWord(true);
        jScrollPane3.setViewportView(BookingTourList);

        jLabel12.setText("Tour Number:");

        jLabel13.setText("Email:");

        BookingEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookingEmailActionPerformed(evt);
            }
        });

        BookingButton.setText("Make Booking");
        BookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookingButtonActionPerformed(evt);
            }
        });

        ListAvailable.setText("List Available Tours");
        ListAvailable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListAvailableActionPerformed(evt);
            }
        });

        ListFuture.setText("List Future Tours");
        ListFuture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListFutureActionPerformed(evt);
            }
        });

        ListAll.setText("List All Tours");
        ListAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListAllActionPerformed(evt);
            }
        });

        CancelBookingButton.setText("Cancel Booking");
        CancelBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBookingButtonActionPerformed(evt);
            }
        });

        CancelTourButton.setText("Cancel Tour");
        CancelTourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelTourButtonActionPerformed(evt);
            }
        });

        BookOutputPane.setEditable(false);
        BookOutputPane.setColumns(20);
        BookOutputPane.setLineWrap(true);
        BookOutputPane.setRows(5);
        BookOutputPane.setWrapStyleWord(true);
        jScrollPane4.setViewportView(BookOutputPane);

        AddClient.setText("Add New Client");
        AddClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddClientActionPerformed(evt);
            }
        });

        ChangeBookingButton.setText("Change Booking");
        ChangeBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeBookingButtonActionPerformed(evt);
            }
        });

        jLabel15.setText("Old tour number:");

        SaveAndExitButton1.setText("Save and Exit");
        SaveAndExitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitButton1ActionPerformed(evt);
            }
        });

        ChangePrice.setText("Change Tour Price");
        ChangePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookTabLayout = new javax.swing.GroupLayout(BookTab);
        BookTab.setLayout(BookTabLayout);
        BookTabLayout.setHorizontalGroup(
            BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookTabLayout.createSequentialGroup()
                        .addComponent(ListAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ListFuture, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ListAll, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addGroup(BookTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookTabLayout.createSequentialGroup()
                        .addComponent(TourNumber)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookTabLayout.createSequentialGroup()
                        .addComponent(BookingEmail)
                        .addContainerGap())
                    .addGroup(BookTabLayout.createSequentialGroup()
                        .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(ChangeBookingButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AddClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CancelTourButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CancelBookingButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BookingButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SaveAndExitButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(BookTabLayout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OldTourNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ChangePrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(36, Short.MAX_VALUE))))
        );
        BookTabLayout.setVerticalGroup(
            BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TourNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(ListAvailable)
                    .addComponent(ListFuture)
                    .addComponent(ListAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(BookTabLayout.createSequentialGroup()
                        .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BookingEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BookingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelBookingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChangeBookingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(BookTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OldTourNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelTourButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ChangePrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddClient)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Book", BookTab);

        jLabel1.setText("Name");

        jLabel2.setText("Description");

        jLabel3.setText("Price");

        jLabel4.setText("Start Date");

        jLabel5.setText("Start time");

        jLabel6.setText("End time");

        StartHourMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        EndMinuteMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        EndHourMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        StartMinuteMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jLabel7.setText("Minimum Capacity");

        ScheduleName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleNameActionPerformed(evt);
            }
        });

        CreateTourButton.setText("Create Tour");
        CreateTourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateTourButtonActionPerformed(evt);
            }
        });

        jLabel11.setText("End Date");

        RepeatCheck.setText("Repeat weekly until:");
        RepeatCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepeatCheckActionPerformed(evt);
            }
        });

        jLabel14.setText("Location");

        ScheduleClear.setText("Clear");
        ScheduleClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ScheduleClearActionPerformed(evt);
            }
        });

        ScheduleOutput.setColumns(20);
        ScheduleOutput.setLineWrap(true);
        ScheduleOutput.setRows(5);
        ScheduleOutput.setWrapStyleWord(true);
        jScrollPane5.setViewportView(ScheduleOutput);

        AMPMEnd.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));

        AMPMStart.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AM", "PM" }));

        SaveAndExitButton2.setText("Save and Exit");
        SaveAndExitButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitButton2ActionPerformed(evt);
            }
        });

        jLabel21.setText("Maximum Capacity");

        jButton4.setText("Load Defaults");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ScheduleTabLayout = new javax.swing.GroupLayout(ScheduleTab);
        ScheduleTab.setLayout(ScheduleTabLayout);
        ScheduleTabLayout.setHorizontalGroup(
            ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScheduleTabLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ScheduleTabLayout.createSequentialGroup()
                        .addComponent(ScheduleName, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScheduleLocation))
                    .addComponent(RepeatCheck)
                    .addComponent(ScheduleDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ScheduleTabLayout.createSequentialGroup()
                        .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ScheduleTabLayout.createSequentialGroup()
                                .addComponent(StartHourMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(StartMinuteMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AMPMStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(117, 117, 117)
                                .addComponent(jLabel6))
                            .addGroup(ScheduleTabLayout.createSequentialGroup()
                                .addComponent(ScheduleStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel11))
                            .addComponent(RepeatUntil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ScheduleTabLayout.createSequentialGroup()
                                .addComponent(EndHourMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(EndMinuteMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AMPMEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ScheduleEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(ScheduleClear, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CreateTourButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(ScheduleTabLayout.createSequentialGroup()
                        .addComponent(ScheduleMinCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ScheduleMaxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SchedulePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ScheduleTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ScheduleTabLayout.setVerticalGroup(
            ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ScheduleTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScheduleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel14)
                    .addComponent(ScheduleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScheduleDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScheduleMinCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ScheduleMaxCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(SchedulePrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))))
                .addGap(4, 4, 4)
                .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ScheduleTabLayout.createSequentialGroup()
                        .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4)
                            .addComponent(ScheduleStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(StartHourMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StartMinuteMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(EndHourMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EndMinuteMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AMPMEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AMPMStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(RepeatCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ScheduleTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ScheduleTabLayout.createSequentialGroup()
                                .addComponent(CreateTourButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ScheduleClear)
                                .addGap(41, 41, 41)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(RepeatUntil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(ScheduleEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton2)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Schedule", ScheduleTab);

        jLabel9.setText("Start date:");

        jLabel10.setText("End date:");

        ReportOutput.setEditable(false);
        ReportOutput.setColumns(20);
        ReportOutput.setLineWrap(true);
        ReportOutput.setRows(5);
        ReportOutput.setWrapStyleWord(true);
        jScrollPane2.setViewportView(ReportOutput);

        ReportButton.setText("Go");
        ReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportButtonActionPerformed(evt);
            }
        });

        SaveAndExitButton3.setText("Save and Exit");
        SaveAndExitButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ReportTabLayout = new javax.swing.GroupLayout(ReportTab);
        ReportTab.setLayout(ReportTabLayout);
        ReportTabLayout.setHorizontalGroup(
            ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportTabLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ReportTabLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(266, 266, 266)
                        .addComponent(jLabel10)
                        .addGap(205, 205, 205))
                    .addComponent(ReportButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportTabLayout.createSequentialGroup()
                        .addComponent(ReportStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReportEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(311, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ReportTabLayout.setVerticalGroup(
            ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportTabLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ReportEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReportStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReportButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton3)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Report", ReportTab);

        jLabel8.setText("E-mail address:");

        EmailLookupField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailLookupFieldActionPerformed(evt);
            }
        });

        ClientSearchOutput.setColumns(20);
        ClientSearchOutput.setLineWrap(true);
        ClientSearchOutput.setRows(5);
        ClientSearchOutput.setWrapStyleWord(true);
        jScrollPane1.setViewportView(ClientSearchOutput);

        SaveAndExitButton4.setText("Save and Exit");
        SaveAndExitButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitButton4ActionPerformed(evt);
            }
        });

        ListClientsButton.setText("List All Clients");
        ListClientsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListClientsButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Edit Client");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("To view details or edit client, enter their ");

        jLabel23.setText("email address in the box above and press Search.");

        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ClientLookupTabLayout = new javax.swing.GroupLayout(ClientLookupTab);
        ClientLookupTab.setLayout(ClientLookupTabLayout);
        ClientLookupTabLayout.setHorizontalGroup(
            ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientLookupTabLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ClientLookupTabLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(EmailLookupField))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ClientLookupTabLayout.createSequentialGroup()
                        .addComponent(ListClientsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientLookupTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 303, Short.MAX_VALUE)
                        .addComponent(SaveAndExitButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(ClientLookupTabLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel16))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        ClientLookupTabLayout.setVerticalGroup(
            ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientLookupTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ClientLookupTabLayout.createSequentialGroup()
                        .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(EmailLookupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ListClientsButton)
                            .addComponent(jButton1)
                            .addComponent(jButton6)))
                    .addGroup(ClientLookupTabLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientLookupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SaveAndExitButton4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Client Lookup", ClientLookupTab);

        jLabel17.setText("Change default values");

        jButton2.setText("Load");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel18.setText("Days before tour to cancel for a refund: ");

        jLabel19.setText("Maximum tour capacity:");

        jLabel20.setText("Minimum tour capacity:");

        PreferencesOut.setColumns(20);
        PreferencesOut.setRows(5);
        jScrollPane6.setViewportView(PreferencesOut);

        SaveAndExitButton5.setText("Save and Exit");
        SaveAndExitButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(61, 61, 61)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 537, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DefaultCancelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DefaultMax, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19)
                            .addComponent(DefaultMin, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DefaultCancelTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DefaultMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DefaultMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 263, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton5)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Preferences", jPanel1);

        jLabel22.setText("Tour Number");

        TourLookupField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TourLookupFieldActionPerformed(evt);
            }
        });

        ListClientsButton1.setText("List All Tours/Bookings");
        ListClientsButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListClientsButton1ActionPerformed(evt);
            }
        });

        TourSearchOutput.setColumns(20);
        TourSearchOutput.setLineWrap(true);
        TourSearchOutput.setRows(5);
        TourSearchOutput.setWrapStyleWord(true);
        jScrollPane7.setViewportView(TourSearchOutput);

        jButton7.setText("Search");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        SaveAndExitButton6.setText("Save and Exit");
        SaveAndExitButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAndExitButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(TourLookupField))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ListClientsButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 340, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(TourLookupField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListClientsButton1)
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 539, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SaveAndExitButton6)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tour Lookup", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ScheduleNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleNameActionPerformed

    }//GEN-LAST:event_ScheduleNameActionPerformed

    private void CreateTourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateTourButtonActionPerformed
        
        try {
            String name = ScheduleName.getText();
            String desc = ScheduleDescription.getText();
            int cap = Integer.parseInt(ScheduleMaxCapacity.getText());
            int mincap = Integer.parseInt(ScheduleMinCapacity.getText());
            double price = Double.parseDouble(SchedulePrice.getText());
            String loc = ScheduleLocation.getText();
            
            GregorianCalendar startselect = (GregorianCalendar) ScheduleStart.getCalendar();
            GregorianCalendar endselect = (GregorianCalendar) ScheduleEnd.getCalendar();
            GregorianCalendar start = new GregorianCalendar();
            GregorianCalendar end = new GregorianCalendar();
            if (AMPMStart.getSelectedIndex() == 1 && StartHourMenu.getSelectedIndex() != 11) {
                start.set(GregorianCalendar.HOUR_OF_DAY, Integer.parseInt((String) StartHourMenu.getSelectedItem()) + 12);
            } else if (AMPMStart.getSelectedIndex() == 0 && StartHourMenu.getSelectedIndex() == 11) {
                start.set(GregorianCalendar.HOUR_OF_DAY, 0);
            } else {
                start.set(GregorianCalendar.HOUR_OF_DAY, Integer.parseInt((String) StartHourMenu.getSelectedItem()));
            }
            
            if (AMPMEnd.getSelectedIndex() == 1 && EndHourMenu.getSelectedIndex() != 11) {
                end.set(GregorianCalendar.HOUR_OF_DAY, Integer.parseInt((String) EndHourMenu.getSelectedItem()) + 12);
            } else if (AMPMEnd.getSelectedIndex() == 0 && EndHourMenu.getSelectedIndex() == 11) {
                end.set(GregorianCalendar.HOUR_OF_DAY, 0);
            } else {
                end.set(GregorianCalendar.HOUR_OF_DAY, Integer.parseInt((String) EndHourMenu.getSelectedItem()));
            }
            start.set(GregorianCalendar.MINUTE, Integer.parseInt((String) StartMinuteMenu.getSelectedItem()));
            start.set(GregorianCalendar.DAY_OF_MONTH, startselect.get(GregorianCalendar.DAY_OF_MONTH));
            start.set(GregorianCalendar.MONTH, startselect.get(GregorianCalendar.MONTH));
            start.set(GregorianCalendar.YEAR, startselect.get(GregorianCalendar.YEAR));
            end.set(GregorianCalendar.MINUTE, Integer.parseInt((String) EndMinuteMenu.getSelectedItem()));
            end.set(GregorianCalendar.DAY_OF_MONTH, endselect.get(GregorianCalendar.DAY_OF_MONTH));
            end.set(GregorianCalendar.MONTH, endselect.get(GregorianCalendar.MONTH));
            end.set(GregorianCalendar.YEAR, endselect.get(GregorianCalendar.YEAR));
            if (start.getTimeInMillis() > end.getTimeInMillis()) {
                ScheduleOutput.setText("Error: start time is after end time.");
            } else {
                ScheduleOutput.setText(TourManager.addTour(name, desc, loc, price, start, end, cap, mincap));
                if (RepeatCheck.isSelected()) {
                    GregorianCalendar until = (GregorianCalendar) RepeatUntil.getCalendar();
                    until.set(GregorianCalendar.HOUR, 23);
                    until.set(GregorianCalendar.MINUTE, 59);
                    
                    int syear = start.get(GregorianCalendar.YEAR);
                        int smonth = start.get(GregorianCalendar.MONTH);
                        int sday = start.get(GregorianCalendar.DAY_OF_MONTH);
                        int shour = start.get(GregorianCalendar.HOUR_OF_DAY);
                        int sminute = start.get(GregorianCalendar.MINUTE);
                        int eyear = end.get(GregorianCalendar.YEAR);
                        int emonth = end.get(GregorianCalendar.MONTH);
                        int eday = end.get(GregorianCalendar.DAY_OF_MONTH);
                        int ehour = end.get(GregorianCalendar.HOUR_OF_DAY);
                        int eminute = end.get(GregorianCalendar.MINUTE);
                        start = new GregorianCalendar(syear, smonth, sday, shour, sminute);
                        end = new GregorianCalendar(eyear, emonth, eday, ehour, eminute);
                        start.add(GregorianCalendar.DAY_OF_MONTH, 7);
                        end.add(GregorianCalendar.DAY_OF_MONTH, 7);
                    
                    while (start.getTimeInMillis() < until.getTimeInMillis()) {
                        ScheduleOutput.append(TourManager.addTour(name, desc, loc, price, start, end, cap, mincap));
                        
                        syear = start.get(GregorianCalendar.YEAR);
                        smonth = start.get(GregorianCalendar.MONTH);
                        sday = start.get(GregorianCalendar.DAY_OF_MONTH);
                        shour = start.get(GregorianCalendar.HOUR_OF_DAY);
                        sminute = start.get(GregorianCalendar.MINUTE);
                        eyear = end.get(GregorianCalendar.YEAR);
                        emonth = end.get(GregorianCalendar.MONTH);
                        eday = end.get(GregorianCalendar.DAY_OF_MONTH);
                        ehour = end.get(GregorianCalendar.HOUR_OF_DAY);
                        eminute = end.get(GregorianCalendar.MINUTE);
                        start = new GregorianCalendar(syear, smonth, sday, shour, sminute);
                        end = new GregorianCalendar(eyear, emonth, eday, ehour, eminute);
                        start.add(GregorianCalendar.DAY_OF_MONTH, 7);
                        end.add(GregorianCalendar.DAY_OF_MONTH, 7);
                        
                    }
                }
            }
        } catch (NumberFormatException numberFormatException) {
            ScheduleOutput.setText("Error: please enter numbers for capacity and price.");
        }
        BookingTourList.setText(TourManager.printAvailableTours());
    }//GEN-LAST:event_CreateTourButtonActionPerformed

    private void RepeatCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepeatCheckActionPerformed

    }//GEN-LAST:event_RepeatCheckActionPerformed

    private void ReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportButtonActionPerformed
        ReportOutput.setText("");
        try {
            Thread.sleep(200);
        } catch (InterruptedException ie) {
            
        }
        GregorianCalendar start = (GregorianCalendar)ReportStart.getCalendar();
        GregorianCalendar end = (GregorianCalendar)ReportEnd.getCalendar();
        start.set(GregorianCalendar.HOUR, 0);
        start.set(GregorianCalendar.MINUTE, 0);
        end.set(GregorianCalendar.HOUR_OF_DAY, 23);
        end.set(GregorianCalendar.MINUTE, 59);

        ReportOutput.append("Total revenue over selected period: " + TourManager.displayRevenue(start, end) + "\n\n");
        ReportOutput.append(TourManager.displayPastBookings(start, end));
    }//GEN-LAST:event_ReportButtonActionPerformed

    private void BookingEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookingEmailActionPerformed

    }//GEN-LAST:event_BookingEmailActionPerformed

    private void BookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookingButtonActionPerformed
        String email = BookingEmail.getText();
        int index;
        try {
            index = Integer.parseInt(TourNumber.getText()) - 1;
        } catch (NumberFormatException nfe) {
            index = TourManager.TourList.size() + 1;
        }
        if (index < TourManager.TourList.size()) {
            TourManager.CurrentTour = TourManager.TourList.get(index);
            Client c = TourManager.searchByEmail(email);
            if (c == null) {
                //Open MakeClient window
                BookOutputPane.setText("");
                MakeClient mc = new MakeClient();
                mc.setVisible(true);
            } else {
                TourManager.CurrentClient = c;
                if (TourManager.CurrentTour.getRemaining() == 0) {
                    BookOutputPane.setText("Error: this tour is full.");
                } else if (TourManager.addBooking(TourManager.CurrentTour, TourManager.CurrentClient) == null) {
                    BookOutputPane.setText("Error: this client has already booked this tour.");
                } else {
                    BookOutputPane.setText("Booking Successful");
                }
            }
        } else {
            BookOutputPane.setText("Error: tour does not exist.");
        }
        BookingTourList.setText(TourManager.printAvailableTours());
    }//GEN-LAST:event_BookingButtonActionPerformed

    private void ListAvailableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListAvailableActionPerformed
        BookingTourList.setText(TourManager.printAvailableTours());
    }//GEN-LAST:event_ListAvailableActionPerformed

    private void ListFutureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListFutureActionPerformed
        BookingTourList.setText(TourManager.printFutureTours());
    }//GEN-LAST:event_ListFutureActionPerformed

    private void ListAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListAllActionPerformed
        BookingTourList.setText(TourManager.printAllTours());
    }//GEN-LAST:event_ListAllActionPerformed

    private void CancelTourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelTourButtonActionPerformed
        try {
            int tournum = Integer.parseInt(TourNumber.getText()) - 1;
            if (tournum < TourManager.TourList.size()) {
                Tour tour = TourManager.TourList.get(tournum);
        
                BookOutputPane.setText(TourManager.cancelTour(tour));
            }
        } catch (NumberFormatException nfe) {
            BookOutputPane.setText("Error: tour does not exist.");
        }
        BookingTourList.setText(TourManager.printAvailableTours());
    }//GEN-LAST:event_CancelTourButtonActionPerformed

    private void CancelBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBookingButtonActionPerformed
        Properties prop = new Properties();
        try {
            int tour = Integer.parseInt(TourNumber.getText()) - 1;
            String email = BookingEmail.getText();
            Client c = TourManager.searchByEmail(email);
            GregorianCalendar present = new GregorianCalendar();
            GregorianCalendar deadline = (GregorianCalendar)(TourManager.TourList.get(tour).getStart()).clone();
         
            prop.load(new FileInputStream("config.properties"));
            int dl = Integer.parseInt(prop.getProperty("cancel"));
            deadline.add(GregorianCalendar.DAY_OF_MONTH, -dl);
            
            if (tour < TourManager.TourList.size()) {
                if (present.before(deadline)) {
                    BookOutputPane.setText(TourManager.cancelBooking(TourManager.TourList.get(tour), c));
                } else {
                    BookOutputPane.setText(TourManager.cancelBookingNoRefund(TourManager.TourList.get(tour), c));
                }
            } else {
                BookOutputPane.setText("Error: tour does not exist.");
            }
        } catch (NumberFormatException nfe) {
            BookOutputPane.setText("Error: tour does not exist.");
        } catch (IOException ioe) {
            BookOutputPane.setText("File read error");
        }
        BookingTourList.setText(TourManager.printAvailableTours());
    }//GEN-LAST:event_CancelBookingButtonActionPerformed

    private void ScheduleClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ScheduleClearActionPerformed
        ScheduleName.setText("");
        ScheduleDescription.setText("");
        ScheduleLocation.setText("");
        ScheduleMinCapacity.setText("");
        ScheduleMaxCapacity.setText("");
        SchedulePrice.setText("");
        ScheduleOutput.setText("");
        RepeatCheck.setSelected(false);
    }//GEN-LAST:event_ScheduleClearActionPerformed

    private void AddClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddClientActionPerformed
        MakeClient mc = new MakeClient();
        mc.setVisible(true);
    }//GEN-LAST:event_AddClientActionPerformed

    private void ChangeBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeBookingButtonActionPerformed
        try {
            int newtour = Integer.parseInt(TourNumber.getText());
            int oldtour = Integer.parseInt(OldTourNumber.getText());
            String email = BookingEmail.getText();
            Client c = TourManager.searchByEmail(email);
            
            Tour ntour = TourManager.TourList.get(newtour-1);
            Tour otour = TourManager.TourList.get(oldtour-1);
            
            int i;
            Booking b = new Booking(otour, c);
            String get = "";
            boolean found = false;
            for (i = 0; i<TourManager.BookingList.size(); i++) {
                if (TourManager.BookingList.get(i).isEqual(b)) {
                    found = true;
                    get = TourManager.changeBooking(TourManager.BookingList.get(i), ntour);
                }
            }
            if (found) {
                BookOutputPane.setText(get);
            } else {
                BookOutputPane.setText("Error: booking does not exist.");
            }
        } catch (NumberFormatException nfe ){
            BookOutputPane.setText("Error: tour does not exist.");
        }
        BookingTourList.setText(TourManager.printAvailableTours());
    }//GEN-LAST:event_ChangeBookingButtonActionPerformed

    private void SaveAndExitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitButton1ActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("lists.ser");
            BufferedOutputStream bos= new BufferedOutputStream(fos);
            ObjectOutputStream oos= new ObjectOutputStream(bos);

            oos.writeObject(TourManager.TourList);
            oos.writeObject(TourManager.ClientList);
            oos.writeObject(TourManager.BookingList);
            oos.close();
        } catch (IOException ioe) {
        }
        
        this.dispose();
    }//GEN-LAST:event_SaveAndExitButton1ActionPerformed

    private void SaveAndExitButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitButton2ActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("lists.ser");
            BufferedOutputStream bos= new BufferedOutputStream(fos);
            ObjectOutputStream oos= new ObjectOutputStream(bos);

            oos.writeObject(TourManager.TourList);
            oos.writeObject(TourManager.ClientList);
            oos.writeObject(TourManager.BookingList);
            oos.close();
        } catch (IOException ioe) {
        }
        
        this.dispose();
    }//GEN-LAST:event_SaveAndExitButton2ActionPerformed

    private void SaveAndExitButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitButton3ActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("lists.ser");
            BufferedOutputStream bos= new BufferedOutputStream(fos);
            ObjectOutputStream oos= new ObjectOutputStream(bos);

            oos.writeObject(TourManager.TourList);
            oos.writeObject(TourManager.ClientList);
            oos.writeObject(TourManager.BookingList);
            oos.close();
        } catch (IOException ioe) {
        }
        
        this.dispose();
    }//GEN-LAST:event_SaveAndExitButton3ActionPerformed

    private void SaveAndExitButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitButton4ActionPerformed
        try {
            FileOutputStream fos = new FileOutputStream("lists.ser");
            BufferedOutputStream bos= new BufferedOutputStream(fos);
            ObjectOutputStream oos= new ObjectOutputStream(bos);

            oos.writeObject(TourManager.TourList);
            oos.writeObject(TourManager.ClientList);
            oos.writeObject(TourManager.BookingList);
            oos.close();
        } catch (IOException ioe) {
        }
        
        this.dispose();
    }//GEN-LAST:event_SaveAndExitButton4ActionPerformed

    private void EmailLookupFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailLookupFieldActionPerformed
        String email = EmailLookupField.getText();
        Client c = TourManager.searchByEmail(email);
        if (c != null) {
            ClientSearchOutput.setText(c.printClientFull()+"\n");
            TourManager.CurrentClient = c;
            int i, j;
            Tour t;
            for (i = 0; i < TourManager.BookingList.size(); i++) {
                if (TourManager.BookingList.get(i).getClient().isEqual(c)) {
                    t = TourManager.BookingList.get(i).getTour();
                    for (j = 0; j < TourManager.TourList.size(); j++) {
                        if (TourManager.TourList.get(j).equals(t)) {
                            ClientSearchOutput.append("\nTour #" + (j+1) +"\n");
                            ClientSearchOutput.append(t.printTourShort() + "\n");
                        }
                    }
                }
            }
        } else {
            ClientSearchOutput.setText("Email not found");
        }
        EmailLookupField.selectAll();
    }//GEN-LAST:event_EmailLookupFieldActionPerformed

    private void ListClientsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListClientsButtonActionPerformed
        ClientSearchOutput.setText("");
        int i;
        for (i = 0; i < TourManager.ClientList.size(); i++) {
            ClientSearchOutput.append(TourManager.ClientList.get(i).printClientShort() + "\n");
        }
    }//GEN-LAST:event_ListClientsButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (TourManager.CurrentClient != null) {
            EditClient ec = new EditClient();
            ec.setVisible(true);
            ec.setDefaultCloseOperation(EditClient.DISPOSE_ON_CLOSE);
        } else {
            ClientSearchOutput.setText("Error: look up a client first.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ChangePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePriceActionPerformed
        try {
            int tourindex = Integer.parseInt(TourNumber.getText()) - 1;
            if (tourindex < TourManager.TourList.size()) {
                TourManager.CurrentTour = TourManager.TourList.get(tourindex);
                EditTourPrice etp = new EditTourPrice();
                etp.setVisible(true);
                etp.setDefaultCloseOperation(EditTourPrice.DISPOSE_ON_CLOSE);
            } else {
                BookOutputPane.setText("Error: tour does not exist.");
            }
        } catch (NumberFormatException nfe) {
            BookOutputPane.setText("Error: tour does not exist.");
        }
    }//GEN-LAST:event_ChangePriceActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Properties prop = new Properties();
        try {
            prop.load(new FileInputStream("config.properties"));
            DefaultCancelTime.setText(prop.getProperty("cancel"));
            DefaultMax.setText(prop.getProperty("maxcap"));
            DefaultMin.setText(prop.getProperty("mincap"));
        } catch (IOException ioe) {
            PreferencesOut.setText("File read error");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            String cancel = DefaultCancelTime.getText();
            String min = DefaultMin.getText();
            String max = DefaultMax.getText();

            Properties prop = new Properties();
            prop.setProperty("cancel",cancel);
            prop.setProperty("mincap",min);
            prop.setProperty("maxcap",max);

            prop.store(new FileOutputStream("config.properties"), null);
            PreferencesOut.setText("Config file written.");
        } catch (NumberFormatException nfe) {
            PreferencesOut.setText("Error: enter integers.");
        } catch (IOException ioe) {
            PreferencesOut.setText("File write error");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Properties prop = new Properties();
        try {
            prop.load(new FileInputStream("config.properties"));
            ScheduleMinCapacity.setText(prop.getProperty("mincap"));
            ScheduleMaxCapacity.setText(prop.getProperty("maxcap"));
        } catch (IOException ioe) {
            ScheduleOutput.setText("File read error");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void TourLookupFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TourLookupFieldActionPerformed
        try {
            int tournum = Integer.parseInt(TourLookupField.getText()) - 1;
            if (tournum < TourManager.TourList.size()) {
                TourSearchOutput.setText(TourManager.TourList.get(tournum).printTour());
                for (int i = 0; i < TourManager.TourList.get(i).getBookings().size(); i++) {
                    TourSearchOutput.append("\n"+ TourManager.TourList.get(i).getBookings().get(i).getClient().getName());
                }
            } else {
                TourSearchOutput.setText("Error: tour does not exist.");
            }
        } catch (NumberFormatException nfe) {
            TourSearchOutput.setText("Error: enter tour number as an integer.");
        }
    }//GEN-LAST:event_TourLookupFieldActionPerformed

    private void ListClientsButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListClientsButton1ActionPerformed
        TourSearchOutput.setText("");
        for (int j = 0; j < TourManager.TourList.size(); j++) {
            TourSearchOutput.append(TourManager.TourList.get(j).printTour());
            for (int i = 0; i < TourManager.TourList.get(i).getBookings().size(); i++) {
                TourSearchOutput.append("\n"+ TourManager.TourList.get(i).getBookings().get(i).getClient().getName());
            }
        }
    }//GEN-LAST:event_ListClientsButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String email = EmailLookupField.getText();
        Client c = TourManager.searchByEmail(email);
        if (c != null) {
            ClientSearchOutput.setText(c.printClientFull()+"\n");
            TourManager.CurrentClient = c;
            int i, j;
            Tour t;
            for (i = 0; i < TourManager.BookingList.size(); i++) {
                if (TourManager.BookingList.get(i).getClient().isEqual(c)) {
                    t = TourManager.BookingList.get(i).getTour();
                    for (j = 0; j < TourManager.TourList.size(); j++) {
                        if (TourManager.TourList.get(j).equals(t)) {
                            ClientSearchOutput.append("\nTour #" + (j+1) +"\n");
                            ClientSearchOutput.append(t.printTourShort() + "\n");
                        }
                    }
                }
            }
        } else {
            ClientSearchOutput.setText("Email not found");
        }
        EmailLookupField.selectAll();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            int tournum = Integer.parseInt(TourLookupField.getText()) - 1;
            if (tournum < TourManager.TourList.size()) {
                TourSearchOutput.setText(TourManager.TourList.get(tournum).printTour());
                for (int i = 0; i < TourManager.TourList.get(i).getBookings().size(); i++) {
                    TourSearchOutput.append("\n"+ TourManager.TourList.get(i).getBookings().get(i).getClient().getName());
                }
            } else {
                TourSearchOutput.setText("Error: tour does not exist.");
            }
        } catch (NumberFormatException nfe) {
            TourSearchOutput.setText("Error: enter tour number as an integer.");
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void SaveAndExitButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitButton5ActionPerformed
    try {
            FileOutputStream fos = new FileOutputStream("lists.ser");
            BufferedOutputStream bos= new BufferedOutputStream(fos);
            ObjectOutputStream oos= new ObjectOutputStream(bos);

            oos.writeObject(TourManager.TourList);
            oos.writeObject(TourManager.ClientList);
            oos.writeObject(TourManager.BookingList);
            oos.close();
        } catch (IOException ioe) {
        }
        
        this.dispose();
    }//GEN-LAST:event_SaveAndExitButton5ActionPerformed

    private void SaveAndExitButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAndExitButton6ActionPerformed
try {
            FileOutputStream fos = new FileOutputStream("lists.ser");
            BufferedOutputStream bos= new BufferedOutputStream(fos);
            ObjectOutputStream oos= new ObjectOutputStream(bos);

            oos.writeObject(TourManager.TourList);
            oos.writeObject(TourManager.ClientList);
            oos.writeObject(TourManager.BookingList);
            oos.close();
        } catch (IOException ioe) {
        }
        
        this.dispose();
    }//GEN-LAST:event_SaveAndExitButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TourManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TourManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TourManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TourManagerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new TourManagerGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox AMPMEnd;
    private javax.swing.JComboBox AMPMStart;
    private javax.swing.JButton AddClient;
    private javax.swing.JTextArea BookOutputPane;
    private javax.swing.JPanel BookTab;
    private javax.swing.JButton BookingButton;
    private javax.swing.JTextField BookingEmail;
    private javax.swing.JTextArea BookingTourList;
    private javax.swing.JButton CancelBookingButton;
    private javax.swing.JButton CancelTourButton;
    private javax.swing.JButton ChangeBookingButton;
    private javax.swing.JButton ChangePrice;
    private javax.swing.JPanel ClientLookupTab;
    private javax.swing.JTextArea ClientSearchOutput;
    private javax.swing.JButton CreateTourButton;
    private javax.swing.JTextField DefaultCancelTime;
    private javax.swing.JTextField DefaultMax;
    private javax.swing.JTextField DefaultMin;
    private javax.swing.JTextField EmailLookupField;
    private javax.swing.JComboBox EndHourMenu;
    private javax.swing.JComboBox EndMinuteMenu;
    private javax.swing.JButton ListAll;
    private javax.swing.JButton ListAvailable;
    private javax.swing.JButton ListClientsButton;
    private javax.swing.JButton ListClientsButton1;
    private javax.swing.JButton ListFuture;
    private javax.swing.JTextField OldTourNumber;
    private javax.swing.JTextArea PreferencesOut;
    private javax.swing.JCheckBox RepeatCheck;
    private com.toedter.calendar.JCalendar RepeatUntil;
    private javax.swing.JButton ReportButton;
    private com.toedter.calendar.JCalendar ReportEnd;
    private javax.swing.JTextArea ReportOutput;
    private com.toedter.calendar.JCalendar ReportStart;
    private javax.swing.JPanel ReportTab;
    private javax.swing.JButton SaveAndExitButton1;
    private javax.swing.JButton SaveAndExitButton2;
    private javax.swing.JButton SaveAndExitButton3;
    private javax.swing.JButton SaveAndExitButton4;
    private javax.swing.JButton SaveAndExitButton5;
    private javax.swing.JButton SaveAndExitButton6;
    private javax.swing.JButton ScheduleClear;
    private javax.swing.JTextField ScheduleDescription;
    private com.toedter.calendar.JCalendar ScheduleEnd;
    private javax.swing.JTextField ScheduleLocation;
    private javax.swing.JTextField ScheduleMaxCapacity;
    private javax.swing.JTextField ScheduleMinCapacity;
    private javax.swing.JTextField ScheduleName;
    private javax.swing.JTextArea ScheduleOutput;
    private javax.swing.JTextField SchedulePrice;
    private com.toedter.calendar.JCalendar ScheduleStart;
    private javax.swing.JPanel ScheduleTab;
    private javax.swing.JComboBox StartHourMenu;
    private javax.swing.JComboBox StartMinuteMenu;
    private javax.swing.JTextField TourLookupField;
    private javax.swing.JTextField TourNumber;
    private javax.swing.JTextArea TourSearchOutput;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
